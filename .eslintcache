[{"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\index.js":"1","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\App.js":"2","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\pages\\AuthPage.js":"3","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\pages\\HomePage.js":"4","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Layout\\Layout.js":"5","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Profile\\UserProfile.js":"6","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Profile\\ProfileForm.js":"7","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Layout\\MainNavigation.js":"8","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Auth\\AuthForm.js":"9","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\StartingPage\\StartingPageContent.js":"10","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\customHooks\\useHttp.js":"11","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\customHooks\\useInputVal.js":"12","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\lib\\api.js":"13"},{"size":237,"mtime":1638472520652,"results":"14","hashOfConfig":"15"},{"size":572,"mtime":1638472520691,"results":"16","hashOfConfig":"15"},{"size":130,"mtime":1638472521023,"results":"17","hashOfConfig":"15"},{"size":171,"mtime":1638472520996,"results":"18","hashOfConfig":"15"},{"size":246,"mtime":1638472520793,"results":"19","hashOfConfig":"15"},{"size":278,"mtime":1638472520941,"results":"20","hashOfConfig":"15"},{"size":429,"mtime":1638472520957,"results":"21","hashOfConfig":"15"},{"size":589,"mtime":1638472520829,"results":"22","hashOfConfig":"15"},{"size":4514,"mtime":1638545765507,"results":"23","hashOfConfig":"15"},{"size":240,"mtime":1638472520848,"results":"24","hashOfConfig":"15"},{"size":1479,"mtime":1638531976784,"results":"25","hashOfConfig":"15"},{"size":1428,"mtime":1638476548940,"results":"26","hashOfConfig":"15"},{"size":3345,"mtime":1638545681602,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hll85y",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\index.js",[],["58","59"],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\App.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\pages\\AuthPage.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\pages\\HomePage.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Layout\\Layout.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Profile\\UserProfile.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Profile\\ProfileForm.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Layout\\MainNavigation.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\Auth\\AuthForm.js",["60","61"],"import { useEffect, useState } from \"react\";\nimport useHttp from \"../../customHooks/useHttp\";\nimport useInputVal from \"../../customHooks/useInputVal\";\nimport classes from \"./AuthForm.module.css\";\nimport { userAuth } from \"../../lib/api\";\n\nconst AuthForm = () => {\n  const { sendRequest, error, data, status, clearRequest } =\n    useHttp(userAuth);\n  const [isLogin, setIsLogin] = useState(true);\n  const checkValidityEmail = (inputValue) => {\n    return inputValue.includes(\"@\");\n  };\n  const checkValidityPassword = (inputValue) => {\n    return inputValue.trim() !== \"\" && inputValue.length > 5;\n  };\n  const {\n    inputValue: emailValue,\n    inputReset: emailReset,\n    inputIsValid: emailIsValid,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHanlder: emailBlurHandler,\n    inputHasError: emailHasError,\n  } = useInputVal(checkValidityEmail);\n  const {\n    inputValue: passwordValue,\n    inputReset: passwordReset,\n    inputIsValid: passwordIsValid,\n    inputChangeHandler: passwordChangeHandler,\n    inputBlurHanlder: passwordBlurHandler,\n    inputHasError: passwordHasError,\n  } = useInputVal(checkValidityPassword);\n\n  let formIsValid = false;\n  if (emailIsValid && passwordIsValid) {\n    formIsValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    // console.log(\"not diabled\");\n    event.preventDefault();\n    if (!emailIsValid || !passwordIsValid) {\n      return;\n    }\n    if (isLogin) {\n      console.log(\"sending request for Logging In!\");\n      sendRequest({\n        data:{\n          email: emailValue,\n          password: passwordValue,\n          // returnSecureToken: true,\n        },\n        type:\"logIn\",\n      });\n    } else {\n      //sign up case\n      console.log(\"sending request for sign up!!\");\n      sendRequest({\n        data:{\n          email: emailValue,\n          password: passwordValue,\n          // returnSecureToken: true,\n        },\n        type:\"signIn\",\n      });\n    }\n    emailReset();\n    passwordReset();\n  };\n\n  let showButton = <button>{isLogin ? \"Login\" : \"Create Account\"}</button>;\n  let disabledButton = (\n    <button disabled>{isLogin ? \"Logging In..\" : \"Signing Up...\"}</button>\n  );\n\n  useEffect(() => {\n    if (error) {\n      //show a modal or error\n      console.log(\"error is>: \", error);\n      alert(error);\n      clearRequest();\n    }\n    if (status === \"pending\") {\n      console.log(\"status is>: \", status);\n    }\n    if (status === \"completed\" && data) {\n      console.log(\"data is: \", data);\n      // if(isLogin){\n      //   alert(\"successfully Logged In!\");\n      // }else{\n      //   alert(\"successfully signed up!\");\n      // }\n      // showButton = <button>{isLogin ? \"Login\" : \"Create Account\"}</button>;\n      clearRequest();\n    }\n  }, [error, status, data]);\n  \n  const emailClasses = `${classes.control} ${\n    emailHasError ? classes.invalid : \"\"\n  }`;\n  const passwordClasses = `${classes.control} ${\n    passwordHasError ? classes.invalid : \"\"\n  }`;\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={emailClasses}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            required\n            value={emailValue}\n            onBlur={emailBlurHandler}\n            onChange={emailChangeHandler}\n          />\n          {emailHasError && (\n            <p className=\"error-text\">Please enter a valid Email!</p>\n          )}\n        </div>\n        <div className={passwordClasses}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            value={passwordValue}\n            onBlur={passwordBlurHandler}\n            onChange={passwordChangeHandler}\n          />\n          {passwordHasError && (\n            <p className=\"error-text\">\n              Please enter a valid Password! (min 6 character)\n            </p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {status === \"pending\" ? disabledButton : showButton}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\components\\StartingPage\\StartingPageContent.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\customHooks\\useHttp.js",[],"J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\customHooks\\useInputVal.js",["62"],"import {useReducer} from 'react';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\nconst initialInputState = {\r\n    value:'',\r\n    isTouched:false,\r\n}\r\nconst inputReducer=(state,action)=>{\r\n    if(action.type===\"INPUT\"){\r\n        return{\r\n            value:action.value,\r\n            isTouched:state.isTouched,\r\n        }\r\n    }\r\n    if(action.type===\"BLUR\"){\r\n        return{\r\n            value:state.value,\r\n            isTouched:true,\r\n        }\r\n    }\r\n    if(action.type===\"RESET\"){\r\n        return {\r\n            value:'',\r\n            isTouched:false,\r\n        }\r\n    }\r\n    return initialInputState;\r\n}\r\nconst useInputVal=(checkValidity)=>{\r\n\r\n    const [inputState,dispatchState]=useReducer(inputReducer,initialInputState);\r\n\r\n    const inputIsValid = checkValidity(inputState.value);\r\n    const inputHasError = inputState.isTouched && !inputIsValid;\r\n\r\n    const inputChangeHandler=(event)=>{\r\n        dispatchState({\r\n            type:\"INPUT\",\r\n            value:event.target.value,\r\n        })\r\n    }\r\n    const inputBlurHanlder=()=>{\r\n        dispatchState({\r\n            type:\"BLUR\",\r\n        })\r\n    }\r\n    const inputReset=()=>{\r\n        dispatchState({\r\n            type:\"RESET\",\r\n        })\r\n    }\r\n    return{\r\n        inputValue:inputState.value,\r\n        inputReset,\r\n        inputIsValid,\r\n        inputChangeHandler,\r\n        inputBlurHanlder,\r\n        inputHasError,\r\n    }\r\n}\r\nexport default useInputVal;","J:\\Development\\Web development\\React\\Maximilian schwarzmuller\\Authentication React Firebase\\src\\lib\\api.js",["63"],"const FIREBASE_DOMAIN = \"https://quote-a-f8cb0-default-rtdb.firebaseio.com/\";\r\nconst signUpNewUserEndpointFirebase =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\r\nconst loginUserEndpointFirebase =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\r\nconst webApiKey = \"AIzaSyCGpmnbP9sXLfYYrQe1uND-fQXbPss-xcU\";\r\n\r\nconst userSignUp=\"/auth/register/user\";\r\nconst userLogIn=\"/auth/login/user\";\r\nexport async function userAuth(userData) {\r\n  let url;\r\n  if (userData.type === \"logIn\") {\r\n    url = `${loginUserEndpointFirebase}${webApiKey}`;\r\n  } else {\r\n    url = `${signUpNewUserEndpointFirebase}${webApiKey}`;\r\n  }\r\n  let urlServer;\r\n  if(userData.type===\"logIn\"){\r\n    urlServer=userLogIn;\r\n  }else{\r\n    urlServer=userSignUp;\r\n  }\r\n  const response = await fetch(urlServer, {\r\n    method: \"Post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userData.data),\r\n  });\r\n  const data = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(data.error.message || \"Could Not sign up!\");\r\n  }\r\n  // console.log(data);\r\n  return data;\r\n}\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quotes.\");\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quote.\");\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not create quote.\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(\r\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestData.commentData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not add comment.\");\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get comments.\");\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":36,"column":5,"nodeType":"70","messageId":"71","endLine":36,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":100,"column":6,"nodeType":"74","endLine":100,"endColumn":27,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":13},{"ruleId":"68","severity":1,"message":"77","line":15,"column":5,"nodeType":"70","messageId":"71","endLine":15,"endColumn":8},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearRequest'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'act' is defined but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [error, status, data, clearRequest]",{"range":"83","text":"84"},[2806,2827],"[error, status, data, clearRequest]"]